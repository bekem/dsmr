
---
substitutions:
  device_name: slimmelezer
    
esphome:
  name: ${device_name}
  name_add_mac_suffix: false
  project:
    name: zuidwijk.slimmelezer
    version: "2.0"
  on_boot:
    then:
      - if:
          condition:
            lambda: return id(has_key);
          then:
            - lambda: |-
                std::string key(id(stored_decryption_key), 32);
                id(dsmr_instance).set_decryption_key(key);
          else:
            - logger.log:
                level: info
                format: "Not using decryption key. If you need to set a key use Home Assistant service 'ESPHome:  ${device_name}_set_dsmr_key'"

esp8266:
  restore_from_flash: true
  board: d1_mini

# Wi-Fi beállítások
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.68.100
    gateway: 192.168.68.1
    subnet: 255.255.255.0


  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_name}
  
  # Powersaving for brownout due to 250mA restriction P1
  output_power: 14dB

captive_portal:



# Enable Home Assistant API
api:
  services:
    service: set_dsmr_key
    variables:
      private_key: string
    then:
      - logger.log:
          format: Setting private key %s. Set to empty string to disable
          args: [private_key.c_str()]
      - globals.set:
          id: has_key
          value: !lambda "return private_key.length() == 32;"
      - lambda: |-
          if (private_key.length() == 32)
            private_key.copy(id(stored_decryption_key), 32);
          id(dsmr_instance).set_decryption_key(private_key);

ota:
  - platform: esphome
    password: !secret slimm_ota

dashboard_import:
  package_import_url: github://zuidwijk/dsmr/slimmelezer.yaml@main
  import_full_config: true

web_server:
  port: 80

uart:
  baud_rate: 115200
  rx_pin: D7
  rx_buffer_size: 3072

globals:
  - id: has_key
    type: bool
    restore_value: yes
    initial_value: "false"
  - id: stored_decryption_key
    type: char[32]
    restore_value: yes

dsmr:
  id: dsmr_instance
  max_telegram_length: 4000
  # For Luxembourg users set here your decryption key
  #decryption_key: !secret decryption_key // enable this when using decryption for Luxembourg; key like '00112233445566778899AABBCCDDEEFF'

sensor:
  - platform: dsmr
    energy_delivered_tariff1:
      name: "Energia fogyasztás tarifa 1"
    energy_delivered_tariff2:
      name: "Energia fogyasztás tarifa 2"
    energy_returned_tariff1:
      name: "Energia visszatáplálás tarifa 1"
    energy_returned_tariff2:
      name: "Energia visszatáplálás tarifa 2"
    power_delivered:
      name: "Aktuális teljesítmény fogyasztás"
      accuracy_decimals: 3
    power_returned:
      name: "Aktuális teljesítmény visszatáplálás"
      accuracy_decimals: 3
    electricity_failures:
      name: "Electricity Failures"
      icon: mdi:alert
    electricity_long_failures:
      name: "Long Electricity Failures"
      icon: mdi:alert
    voltage_l1:
      name: "Feszültség L1"
    voltage_l2:
      name: "Feszültség L2"
    voltage_l3:
      name: "Feszültség L3"
    current_l1:
      name: "Áram L1"
    current_l2:
      name: "Áram L2"
    current_l3:
      name: "Áram L3"
    power_delivered_l1:
      name: "Teljesítmény fogyasztás L1"
      accuracy_decimals: 3
    power_delivered_l2:
      name: "Teljesítmény fogyasztás L2"
      accuracy_decimals: 3
    power_delivered_l3:
      name: "Teljesítmény fogyasztás L3"
      accuracy_decimals: 3
    power_returned_l1:
      name: "Teljesítmény visszatáplálás L1"
      accuracy_decimals: 3
    power_returned_l2:
      name: "Teljesítmény visszatáplálás L2"
      accuracy_decimals: 3
    power_returned_l3:
      name: "Teljesítmény visszatáplálás L3"
      accuracy_decimals: 3




  - platform: uptime
    name: "SlimmeLezer Uptime"
  - platform: wifi_signal
    name: "SlimmeLezer Wi-Fi Signal"
    update_interval: 60s


text_sensor:
  - platform: dsmr
    identification:
      name: "DSMR Identification"
    p1_version:
      name: "DSMR Version"
    p1_version_be:
      name: "DSMR Version Belgium"
#    timestamp:
#      name: "Timestamp"
  - platform: wifi_info
    ip_address:
      name: "SlimmeLezer IP Address"
    ssid:
      name: "SlimmeLezer Wi-Fi SSID"
    bssid:
      name: "SlimmeLezer Wi-Fi BSSID"
  - platform: version
    name: "ESPHome Version"
    hide_timestamp: true

# Enable logging
logger:
  level: DEBUG
  baud_rate: 0
  logs: 
    component: ERROR
    dsmr.component: DEBUG
